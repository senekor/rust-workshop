import{_ as i}from"./Nr-EHyLhZ3V.js";import{o as d,c as a,k as u,e,aa as l,l as m,q as c,s as p,B as t}from"./modules/vue-Crn47hHj.js";import{I as y}from"./slidev/center-Bm8JpB-J.js";import{u as f,f as v}from"./slidev/context-MFTQElAV.js";import"./index-DIPpyZM8.js";import"./modules/shiki-BLWRfs9A.js";const S={__name:"2_concurrency_parallelism.md__slidev_27",setup(b){const{$slidev:x,$nav:g,$clicksContext:o,$clicks:$,$page:h,$renderContext:w,$frontmatter:s}=f();return o.setup(),(N,n)=>{const r=i;return d(),a(y,c(p(t(v)(t(s),26))),{default:u(()=>[n[0]||(n[0]=e("h1",null,[e("code",null,"Send"),l(" and "),e("code",null,"Sync")],-1)),n[1]||(n[1]=e("div",{style:{height:"1em"}},null,-1)),n[2]||(n[2]=e("div",{style:{display:"flex"}},[e("div",{style:{"flex-grow":"1"}}),e("div",{style:{"text-align":"left"}},[e("li",null,[l("Types that can be sent (move ownership) across thread-boundaries are "),e("code",null,"Send"),l(".")]),e("li",null,[l(" Types where references to them can be sent across thread-boundaries are "),e("code",null,"Sync"),l(". "),e("br"),l(" Intuitively, they can be read by multiple threads at the same time. ")])]),e("div",{style:{"flex-grow":"1"}})],-1)),n[3]||(n[3]=e("div",{style:{height:"2em"}},null,-1)),n[4]||(n[4]=e("div",{style:{display:"flex"}},[e("div",{style:{"flex-grow":"1"}}),e("div",{style:{"text-align":"left"}},[e("li",null,[l("Most normal types are both "),e("code",null,"Send"),l(" and "),e("code",null,"Sync"),l(".")]),e("li",null,[e("code",null,"Rc"),l(" is "),e("b",null,"NEITHER"),l(),e("code",null,"Send"),l(),e("b",null,"NOR"),l(),e("code",null,"Sync"),l(".")]),e("li",null,[e("code",null,"RefCell"),l(),e("b",null,"IS"),l(),e("code",null,"Send"),l(", but it is "),e("b",null,"NOT"),l(),e("code",null,"Sync"),l(".")]),e("li",null,[e("code",null,"Mutex"),l(),e("b",null,"IS"),l(),e("code",null,"Sync"),l(", even if its contained type is only "),e("code",null,"Send"),l(".")])]),e("div",{style:{"flex-grow":"1"}})],-1)),n[5]||(n[5]=e("div",{style:{height:"1em"}},null,-1)),n[6]||(n[6]=e("p",null,[e("code",null,"Send"),l(" and "),e("code",null,"Sync"),l(" are "),e("b",null,"auto traits"),l(", meaning the compiler"),e("br"),l(" implements them for you where appropriate.")],-1)),m(r)]),_:1},16)}}},B=S;export{B as default};
